version: 2
jobs:
  unittest_get:
    docker:
      - image: webby980/base-python-tf
    environment:
      - PYTHONPATH: "${PYTHONPATH}:/root/repo/skeleton"

    working_directory: ~/repo

    steps:
      - checkout
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          name: Install test dependencies
          command: |
            python3.6 -m venv venv
            . venv/bin/activate
            pip3 install -r requirements.txt
       run:
            name: Install code dependencies
            command: |
              python3.6 -m venv venv
              . venv/bin/activate
              pip3 install -r skeleton-get/requirements.txt
      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - "venv"

      - run:
          name: Unit test
          command: |
            . venv/bin/activate
            python3.6 -m unittest discover skeleton-get
      - run:
          name: Pylint
          command: |
            pylint skeleton-get/handler.py
      - run:
          name: Coverage
          command: |
            . venv/bin/activate
            cd skeleton-get
            coverage run --source=. -m unittest discover
            coverage report -m

  build_get:
    docker:
      - image: webby980/base-python-tf

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: Create AWS config/credentials files
          command: |
            aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
            aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
            aws configure set default.region eu-west-2
      - run:
          name: Store Lambda artifact and its sha256 hash in S3
          command: |
            7z h -scrcsha256 skeleton-get/* -xr\!infrastructure | grep "SHA256 for data:" | cut -c 31- | awk '{ print $1 }' > skeleton-get-${CIRCLE_SHA1}.hash
            pip3 install -r skeleton-get/requirements.txt -t skeleton-get/
            cd skeleton-get/ && 7z a -tzip ../skeleton-get.zip . -xr\!infrastructure -xr\!requirements.txt -xr\!test_lambda.py -xr\!README.md -xr\!__pycache__/ && cd ..
            aws s3 cp skeleton-get-${CIRCLE_SHA1}.hash s3://$S3_ARTIFACTS_BUCKET/${CIRCLE_PROJECT_REPONAME}/skeleton-get/ --content-type text/plain
            aws s3 cp skeleton-get.zip s3://$S3_ARTIFACTS_BUCKET/${CIRCLE_PROJECT_REPONAME}/skeleton-get/${CIRCLE_SHA1}.zip --region $REGION
      - run:
          name: Deploy the new Lambda version
          command: |
            python3.6 terraform.py --action=apply --environment=one-time --component=skeleton-api-endpoints --profile=default
            python3.6 terraform.py --action=apply --environment=lambda --component=skeleton-get --profile=default git_hash=${CIRCLE_SHA1}

  deploy_to_test:
    docker:
      - image: webby980/base-python-tf

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: Create AWS config/credentials files
          command: |
            aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
            aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
            aws configure set default.region eu-west-2
      - run:
          name: Deploy ${CIRCLE_PROJECT_REPONAME} to test
          command: |
            python3.6 terraform.py --action=apply --environment=test --component=aliases --profile=default git_hash=${CIRCLE_SHA1} environment=test

  integration:
    docker:
      - image: webby980/base-python-tf

    working_directory: ~/repo

    steps:
      - checkout
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}

      - run:
          name: Install integration test dependencies
          command: |
            python3.6 -m venv venv
            . venv/bin/activate
            pip3 install -r requirements.txt
      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - "venv"

      - run:
          name: Unit test
          command: |
            . venv/bin/activate
            python -m unittest discover integration

  deploy_to_prod:
    docker:
      - image: webby980/base-python-tf

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: Create AWS config/credentials files
          command: |
            aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
            aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
            aws configure set default.region eu-west-2

      - run:
          name: Deploy the new version of ${CIRCLE_PROJECT_REPONAME} to prod
          command: |
            python3.6 terraform.py --action=apply --environment=prod --component=aliases --profile=default git_hash=${CIRCLE_SHA1} environment=prod

workflows:
  version: 2
  skeleton:
    jobs:
      - unittest_get:
          filters:
            branches:
              only: master
      - build_get:
          requires:
            - unittest_get
          filters:
            branches:
              only: master
      - deploy_to_test:
          requires:
            - build_get
          filters:
            branches:
              only: master
      - integration:
          requires:
            - deploy_to_test
          filters:
           branches:
             only: master
      - deploy_to_prod:
          requires:
            - integration
          filters:
           branches:
             only: master
